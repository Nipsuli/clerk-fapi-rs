/*
 * Clerk Frontend API
 *
 * The Clerk REST Frontend API, meant to be accessed from a browser or native environment.  This is a Form Based API and all the data must be sent and formatted according to the `application/x-www-form-urlencoded` content type.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2021-02-05`. For more information, please see [Clerk API Versions](https://clerk.com/docs/backend-requests/versioning/overview).  ### Using the Try It Console  The `Try It` feature of the docs only works for **Development Instances** when using the `DevBrowser` security scheme. To use it, first generate a dev instance token from the `/v1/dev_browser` endpoint.  Please see https://clerk.com/docs for more information.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@clerk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserSettingsSocials {
    #[serde(rename = "oauth_apple", skip_serializing_if = "Option::is_none")]
    pub oauth_apple: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_atlassian", skip_serializing_if = "Option::is_none")]
    pub oauth_atlassian: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_bitbucket", skip_serializing_if = "Option::is_none")]
    pub oauth_bitbucket: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_box", skip_serializing_if = "Option::is_none")]
    pub oauth_box: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_coinbase", skip_serializing_if = "Option::is_none")]
    pub oauth_coinbase: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_custom_mock", skip_serializing_if = "Option::is_none")]
    pub oauth_custom_mock: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_discord", skip_serializing_if = "Option::is_none")]
    pub oauth_discord: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_dropbox", skip_serializing_if = "Option::is_none")]
    pub oauth_dropbox: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_enstall", skip_serializing_if = "Option::is_none")]
    pub oauth_enstall: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_expressen", skip_serializing_if = "Option::is_none")]
    pub oauth_expressen: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_facebook", skip_serializing_if = "Option::is_none")]
    pub oauth_facebook: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_github", skip_serializing_if = "Option::is_none")]
    pub oauth_github: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_gitlab", skip_serializing_if = "Option::is_none")]
    pub oauth_gitlab: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_google", skip_serializing_if = "Option::is_none")]
    pub oauth_google: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_hubspot", skip_serializing_if = "Option::is_none")]
    pub oauth_hubspot: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_huggingface", skip_serializing_if = "Option::is_none")]
    pub oauth_huggingface: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_instagram", skip_serializing_if = "Option::is_none")]
    pub oauth_instagram: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_line", skip_serializing_if = "Option::is_none")]
    pub oauth_line: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_linear", skip_serializing_if = "Option::is_none")]
    pub oauth_linear: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_linkedin", skip_serializing_if = "Option::is_none")]
    pub oauth_linkedin: Option<Box<models::UserSettingsSocial>>,
    #[serde(
        rename = "oauth_linkedin_oidc",
        skip_serializing_if = "Option::is_none"
    )]
    pub oauth_linkedin_oidc: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_microsoft", skip_serializing_if = "Option::is_none")]
    pub oauth_microsoft: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_mock", skip_serializing_if = "Option::is_none")]
    pub oauth_mock: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_notion", skip_serializing_if = "Option::is_none")]
    pub oauth_notion: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_slack", skip_serializing_if = "Option::is_none")]
    pub oauth_slack: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_spotify", skip_serializing_if = "Option::is_none")]
    pub oauth_spotify: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_tiktok", skip_serializing_if = "Option::is_none")]
    pub oauth_tiktok: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_twitch", skip_serializing_if = "Option::is_none")]
    pub oauth_twitch: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_twitter", skip_serializing_if = "Option::is_none")]
    pub oauth_twitter: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_x", skip_serializing_if = "Option::is_none")]
    pub oauth_x: Option<Box<models::UserSettingsSocial>>,
    #[serde(rename = "oauth_xero", skip_serializing_if = "Option::is_none")]
    pub oauth_xero: Option<Box<models::UserSettingsSocial>>,
}

impl UserSettingsSocials {
    pub fn new() -> UserSettingsSocials {
        UserSettingsSocials {
            oauth_apple: None,
            oauth_atlassian: None,
            oauth_bitbucket: None,
            oauth_box: None,
            oauth_coinbase: None,
            oauth_custom_mock: None,
            oauth_discord: None,
            oauth_dropbox: None,
            oauth_enstall: None,
            oauth_expressen: None,
            oauth_facebook: None,
            oauth_github: None,
            oauth_gitlab: None,
            oauth_google: None,
            oauth_hubspot: None,
            oauth_huggingface: None,
            oauth_instagram: None,
            oauth_line: None,
            oauth_linear: None,
            oauth_linkedin: None,
            oauth_linkedin_oidc: None,
            oauth_microsoft: None,
            oauth_mock: None,
            oauth_notion: None,
            oauth_slack: None,
            oauth_spotify: None,
            oauth_tiktok: None,
            oauth_twitch: None,
            oauth_twitter: None,
            oauth_x: None,
            oauth_xero: None,
        }
    }
}
