/*
 * Clerk Frontend API
 *
 * The Clerk REST Frontend API, meant to be accessed from a browser or native environment.  This is a Form Based API and all the data must be sent and formatted according to the `application/x-www-form-urlencoded` content type.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2021-02-05`. For more information, please see [Clerk API Versions](https://clerk.com/docs/backend-requests/versioning/overview).  ### Using the Try It Console  The `Try It` feature of the docs only works for **Development Instances** when using the `DevBrowser` security scheme. To use it, first generate a dev instance token from the `/v1/dev_browser` endpoint.  Please see https://clerk.com/docs for more information.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@clerk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClientPeriodUserSettings {
    #[serde(rename = "attributes")]
    pub attributes: Box<models::UserSettingsPeriodAttributes>,
    #[serde(rename = "social")]
    pub social: Box<models::UserSettingsPeriodSocials>,
    #[serde(rename = "saml")]
    pub saml: Box<models::UserSettingsPeriodEnterpriseSso>,
    #[serde(rename = "enterprise_sso")]
    pub enterprise_sso: Box<models::UserSettingsPeriodEnterpriseSso>,
    #[serde(rename = "sign_in")]
    pub sign_in: Box<models::UserSettingsPeriodSignIn>,
    #[serde(rename = "sign_up")]
    pub sign_up: Box<models::UserSettingsPeriodSignUp>,
    #[serde(rename = "restrictions")]
    pub restrictions: Box<models::UserSettingsPeriodRestrictions>,
    #[serde(rename = "password_settings")]
    pub password_settings: Box<models::UserSettingsPeriodPasswordSettings>,
    #[serde(rename = "username_settings")]
    pub username_settings: Box<models::UserSettingsPeriodUsernameSettings>,
    #[serde(rename = "actions")]
    pub actions: Box<models::UserSettingsPeriodActionsSettings>,
    #[serde(rename = "attack_protection")]
    pub attack_protection: Box<models::UserSettingsPeriodAttackProtectionSettings>,
    #[serde(rename = "passkey_settings")]
    pub passkey_settings: Box<models::UserSettingsPeriodPasskeySettings>,
}

impl ClientPeriodUserSettings {
    pub fn new(
        attributes: models::UserSettingsPeriodAttributes,
        social: models::UserSettingsPeriodSocials,
        saml: models::UserSettingsPeriodEnterpriseSso,
        enterprise_sso: models::UserSettingsPeriodEnterpriseSso,
        sign_in: models::UserSettingsPeriodSignIn,
        sign_up: models::UserSettingsPeriodSignUp,
        restrictions: models::UserSettingsPeriodRestrictions,
        password_settings: models::UserSettingsPeriodPasswordSettings,
        username_settings: models::UserSettingsPeriodUsernameSettings,
        actions: models::UserSettingsPeriodActionsSettings,
        attack_protection: models::UserSettingsPeriodAttackProtectionSettings,
        passkey_settings: models::UserSettingsPeriodPasskeySettings,
    ) -> ClientPeriodUserSettings {
        ClientPeriodUserSettings {
            attributes: Box::new(attributes),
            social: Box::new(social),
            saml: Box::new(saml),
            enterprise_sso: Box::new(enterprise_sso),
            sign_in: Box::new(sign_in),
            sign_up: Box::new(sign_up),
            restrictions: Box::new(restrictions),
            password_settings: Box::new(password_settings),
            username_settings: Box::new(username_settings),
            actions: Box::new(actions),
            attack_protection: Box::new(attack_protection),
            passkey_settings: Box::new(passkey_settings),
        }
    }
}
