/*
 * Clerk Frontend API
 *
 * The Clerk REST Frontend API, meant to be accessed from a browser or native environment.  This is a Form Based API and all the data must be sent and formatted according to the `application/x-www-form-urlencoded` content type.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2021-02-05`. For more information, please see [Clerk API Versions](https://clerk.com/docs/backend-requests/versioning/overview).  ### Using the Try It Console  The `Try It` feature of the docs only works for **Development Instances** when using the `DevBrowser` security scheme. To use it, first generate a dev instance token from the `/v1/dev_browser` endpoint.  Please see https://clerk.com/docs for more information.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@clerk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserSettingsRestrictions {
    #[serde(rename = "allowlist")]
    pub allowlist: Box<models::UserSettingsRestrictionsEnabled>,
    #[serde(rename = "blocklist")]
    pub blocklist: Box<models::UserSettingsRestrictionsEnabled>,
    #[serde(rename = "allowlist_blocklist_disabled_on_sign_in")]
    pub allowlist_blocklist_disabled_on_sign_in: Box<models::UserSettingsRestrictionsEnabled>,
    #[serde(rename = "block_email_subaddresses")]
    pub block_email_subaddresses: Box<models::UserSettingsRestrictionsEnabled>,
    #[serde(rename = "block_disposable_email_domains")]
    pub block_disposable_email_domains: Box<models::UserSettingsRestrictionsEnabled>,
}

impl UserSettingsRestrictions {
    pub fn new(
        allowlist: models::UserSettingsRestrictionsEnabled,
        blocklist: models::UserSettingsRestrictionsEnabled,
        allowlist_blocklist_disabled_on_sign_in: models::UserSettingsRestrictionsEnabled,
        block_email_subaddresses: models::UserSettingsRestrictionsEnabled,
        block_disposable_email_domains: models::UserSettingsRestrictionsEnabled,
    ) -> UserSettingsRestrictions {
        UserSettingsRestrictions {
            allowlist: Box::new(allowlist),
            blocklist: Box::new(blocklist),
            allowlist_blocklist_disabled_on_sign_in: Box::new(
                allowlist_blocklist_disabled_on_sign_in,
            ),
            block_email_subaddresses: Box::new(block_email_subaddresses),
            block_disposable_email_domains: Box::new(block_disposable_email_domains),
        }
    }
}
