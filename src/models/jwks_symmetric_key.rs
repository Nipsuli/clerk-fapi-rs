/*
 * Clerk Frontend API
 *
 * The Clerk REST Frontend API, meant to be accessed from a browser or native environment.  This is a Form Based API and all the data must be sent and formatted according to the `application/x-www-form-urlencoded` content type.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2021-02-05`. For more information, please see [Clerk API Versions](https://clerk.com/docs/backend-requests/versioning/overview).  ### Using the Try It Console  The `Try It` feature of the docs only works for **Development Instances** when using the `DevBrowser` security scheme. To use it, first generate a dev instance token from the `/v1/dev_browser` endpoint.  Please see https://clerk.com/docs for more information.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@clerk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct JwksSymmetricKey {
    #[serde(rename = "kid")]
    pub kid: String,
    #[serde(rename = "alg")]
    pub alg: String,
    #[serde(rename = "use")]
    pub r#use: String,
    #[serde(rename = "kty")]
    pub kty: Kty,
    #[serde(rename = "k")]
    pub k: String,
    #[serde(rename = "x5c", skip_serializing_if = "Option::is_none")]
    pub x5c: Option<Vec<String>>,
    #[serde(rename = "x5t", skip_serializing_if = "Option::is_none")]
    pub x5t: Option<String>,
    #[serde(rename = "x5t#S256", skip_serializing_if = "Option::is_none")]
    pub x5t_hash_s256: Option<String>,
    #[serde(rename = "x5u", skip_serializing_if = "Option::is_none")]
    pub x5u: Option<String>,
}

impl JwksSymmetricKey {
    pub fn new(kid: String, alg: String, r#use: String, kty: Kty, k: String) -> JwksSymmetricKey {
        JwksSymmetricKey {
            kid,
            alg,
            r#use,
            kty,
            k,
            x5c: None,
            x5t: None,
            x5t_hash_s256: None,
            x5u: None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Kty {
    #[serde(rename = "oct")]
    Oct,
}

impl Default for Kty {
    fn default() -> Kty {
        Self::Oct
    }
}
