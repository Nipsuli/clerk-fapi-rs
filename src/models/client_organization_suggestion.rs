/*
 * Clerk Frontend API
 *
 * The Clerk REST Frontend API, meant to be accessed from a browser or native environment.  This is a Form Based API and all the data must be sent and formatted according to the `application/x-www-form-urlencoded` content type.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2021-02-05`. For more information, please see [Clerk API Versions](https://clerk.com/docs/backend-requests/versioning/overview).  ### Using the Try It Console  The `Try It` feature of the docs only works for **Development Instances** when using the `DevBrowser` security scheme. To use it, first generate a dev instance token from the `/v1/dev_browser` endpoint.  Please see https://clerk.com/docs for more information.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@clerk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClientOrganizationSuggestion {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(
        rename = "public_organization_data",
        skip_serializing_if = "Option::is_none"
    )]
    pub public_organization_data: Option<Box<models::ClientPublicOrganizationData>>,
    #[serde(rename = "status")]
    pub status: String,
    /// Unix timestamp of creation.
    #[serde(rename = "created_at")]
    pub created_at: i64,
    /// Unix timestamp of last update.
    #[serde(rename = "updated_at")]
    pub updated_at: i64,
}

impl ClientOrganizationSuggestion {
    pub fn new(
        object: Object,
        id: String,
        status: String,
        created_at: i64,
        updated_at: i64,
    ) -> ClientOrganizationSuggestion {
        ClientOrganizationSuggestion {
            object,
            id,
            public_organization_data: None,
            status,
            created_at,
            updated_at,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "organization_suggestion")]
    OrganizationSuggestion,
}

impl Default for Object {
    fn default() -> Object {
        Self::OrganizationSuggestion
    }
}
