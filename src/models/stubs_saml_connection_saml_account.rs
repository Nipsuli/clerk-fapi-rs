/*
 * Clerk Frontend API
 *
 * The Clerk REST Frontend API, meant to be accessed from a browser or native environment.  This is a Form Based API and all the data must be sent and formatted according to the `application/x-www-form-urlencoded` content type.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2021-02-05`. For more information, please see [Clerk API Versions](https://clerk.com/docs/backend-requests/versioning/overview).  ### Using the Try It Console  The `Try It` feature of the docs only works for **Development Instances** when using the `DevBrowser` security scheme. To use it, first generate a dev instance token from the `/v1/dev_browser` endpoint.  Please see https://clerk.com/docs for more information.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@clerk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StubsSamlConnectionSamlAccount {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "domain", skip_serializing_if = "Option::is_none")]
    pub domain: Option<String>,
    #[serde(rename = "domains", skip_serializing_if = "Option::is_none")]
    pub domains: Option<Vec<String>>,
    #[serde(rename = "active")]
    pub active: bool,
    #[serde(rename = "provider")]
    pub provider: String,
    #[serde(rename = "sync_user_attributes")]
    pub sync_user_attributes: bool,
    #[serde(rename = "allow_subdomains", skip_serializing_if = "Option::is_none")]
    pub allow_subdomains: Option<bool>,
    #[serde(
        rename = "allow_idp_initiated",
        skip_serializing_if = "Option::is_none"
    )]
    pub allow_idp_initiated: Option<bool>,
    #[serde(
        rename = "disable_additional_identifications",
        skip_serializing_if = "Option::is_none"
    )]
    pub disable_additional_identifications: Option<bool>,
    /// Unix timestamp of creation.
    #[serde(rename = "created_at")]
    pub created_at: i64,
    /// Unix timestamp of last update.
    #[serde(rename = "updated_at")]
    pub updated_at: i64,
}

impl StubsSamlConnectionSamlAccount {
    pub fn new(
        id: String,
        name: String,
        active: bool,
        provider: String,
        sync_user_attributes: bool,
        created_at: i64,
        updated_at: i64,
    ) -> StubsSamlConnectionSamlAccount {
        StubsSamlConnectionSamlAccount {
            id,
            name,
            domain: None,
            domains: None,
            active,
            provider,
            sync_user_attributes,
            allow_subdomains: None,
            allow_idp_initiated: None,
            disable_additional_identifications: None,
            created_at,
            updated_at,
        }
    }
}
