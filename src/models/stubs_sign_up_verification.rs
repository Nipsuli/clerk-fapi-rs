/*
 * Clerk Frontend API
 *
 * The Clerk REST Frontend API, meant to be accessed from a browser or native environment.  This is a Form Based API and all the data must be sent and formatted according to the `application/x-www-form-urlencoded` content type.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2021-02-05`. For more information, please see [Clerk API Versions](https://clerk.com/docs/backend-requests/versioning/overview).  ### Using the Try It Console  The `Try It` feature of the docs only works for **Development Instances** when using the `DevBrowser` security scheme. To use it, first generate a dev instance token from the `/v1/dev_browser` endpoint.  Please see https://clerk.com/docs for more information.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@clerk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StubsSignUpVerification {
    #[serde(rename = "next_action")]
    pub next_action: NextAction,
    #[serde(rename = "supported_strategies")]
    pub supported_strategies: Vec<String>,
}

impl StubsSignUpVerification {
    pub fn new(
        next_action: NextAction,
        supported_strategies: Vec<String>,
    ) -> StubsSignUpVerification {
        StubsSignUpVerification {
            next_action,
            supported_strategies,
        }
    }
}

#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum NextAction {
    #[serde(rename = "needs_prepare")]
    NeedsPrepare,
    #[serde(rename = "needs_attempt")]
    NeedsAttempt,
    #[serde(rename = "")]
    Empty,
}

impl Default for NextAction {
    fn default() -> NextAction {
        Self::NeedsPrepare
    }
}
