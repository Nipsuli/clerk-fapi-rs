/*
 * Clerk Frontend API
 *
 * The Clerk REST Frontend API, meant to be accessed from a browser or native environment.  This is a Form Based API and all the data must be sent and formatted according to the `application/x-www-form-urlencoded` content type.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2021-02-05`. For more information, please see [Clerk API Versions](https://clerk.com/docs/backend-requests/versioning/overview).  ### Using the Try It Console  The `Try It` feature of the docs only works for **Development Instances** when using the `DevBrowser` security scheme. To use it, first generate a dev instance token from the `/v1/dev_browser` endpoint.  Please see https://clerk.com/docs for more information.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@clerk.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClientEnvironment {
    #[serde(rename = "auth_config", skip_serializing_if = "Option::is_none")]
    pub auth_config: Option<Box<models::ClientAuthConfig>>,
    #[serde(rename = "display_config", skip_serializing_if = "Option::is_none")]
    pub display_config: Option<Box<models::ClientDisplayConfig>>,
    #[serde(rename = "user_settings", skip_serializing_if = "Option::is_none")]
    pub user_settings: Option<Box<models::ClientUserSettings>>,
    #[serde(
        rename = "organization_settings",
        skip_serializing_if = "Option::is_none"
    )]
    pub organization_settings: Option<Box<models::ClientOrganizationSettings>>,
    #[serde(rename = "fraud_settings", skip_serializing_if = "Option::is_none")]
    pub fraud_settings: Option<Box<models::ClientFraudSettings>>,
    #[serde(rename = "commerce_settings", skip_serializing_if = "Option::is_none")]
    pub commerce_settings: Option<Box<models::ClientCommerceSettings>>,
    #[serde(rename = "api_keys_settings", skip_serializing_if = "Option::is_none")]
    pub api_keys_settings: Option<Box<models::ClientApiKeysSettings>>,
    #[serde(rename = "client_debug_mode", skip_serializing_if = "Option::is_none")]
    pub client_debug_mode: Option<bool>,
    #[serde(rename = "maintenance_mode", skip_serializing_if = "Option::is_none")]
    pub maintenance_mode: Option<bool>,
}

impl ClientEnvironment {
    pub fn new() -> ClientEnvironment {
        ClientEnvironment {
            auth_config: None,
            display_config: None,
            user_settings: None,
            organization_settings: None,
            fraud_settings: None,
            commerce_settings: None,
            api_keys_settings: None,
            client_debug_mode: None,
            maintenance_mode: None,
        }
    }
}
